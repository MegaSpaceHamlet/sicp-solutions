(define (fast-expt-i b n)
  (fast-expt-iter b n 1))

(define (fast-expt-iter b counter product)
  (cond ((= counter 0) product)
        ((even? counter) (display "Even fast-expt-iter: ")(fast-expt-iter b (- counter 2) (* product (square b))))
        (else (display "Odd fast-expt-iter: ") (* b (fast-expt-iter b (- counter 1) product)))))
